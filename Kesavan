import re

def check_password_strength(password):
    # Criteria
    length_criteria = len(password) >= 8
    lowercase_criteria = re.search(r'[a-z]', password) is not None
    uppercase_criteria = re.search(r'[A-Z]', password) is not None
    number_criteria = re.search(r'[0-9]', password) is not None
    special_char_criteria = re.search(r'[\W_]', password) is not None  # Non-alphanumeric characters
    
    # Score calculation
    strength_score = sum([length_criteria, lowercase_criteria, uppercase_criteria, number_criteria, special_char_criteria])
    
    # Feedback based on score
    if strength_score == 5:
        return "Strong Password"
    elif 3 <= strength_score < 5:
        return "Medium Password"
    else:
        return "Weak Password"

def give_feedback(password):
    # Detailed feedback for the user
    feedback = []
    
    if len(password) < 8:
        feedback.append("Password must be at least 8 characters long.")
    
    if not re.search(r'[a-z]', password):
        feedback.append("Password should contain at least one lowercase letter.")
    
    if not re.search(r'[A-Z]', password):
        feedback.append("Password should contain at least one uppercase letter.")
    
    if not re.search(r'[0-9]', password):
        feedback.append("Password should contain at least one digit.")
    
    if not re.search(r'[\W_]', password):
        feedback.append("Password should contain at least one special character.")
    
    return feedback

# Example Usage
password = input("Enter your password: ")

# Check password strength
strength = check_password_strength(password)
feedback = give_feedback(password)

print(f"Password strength: {strength}")

if feedback:
    print("Feedback to improve your password:")
    for comment in feedback:
        print(f"- {comment}")
